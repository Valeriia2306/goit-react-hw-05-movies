{"version":3,"file":"static/js/187.529e78c0.chunk.js","mappings":"sRAEMA,EAAU,mCACVC,EAAQ,8BAERC,EAAoB,kBACxBC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sCAAmDD,GAD3B,EAGpBI,EAAkB,SAACC,GAAD,IAAOC,EAAP,uDAAc,EAAd,OACtBH,EAAAA,EAAAA,IAAA,UACKF,EADL,kCACuCD,EADvC,gCACsEM,EADtE,sCACwGD,GAFlF,EAKlBE,EAAgB,SAAAC,GAAE,OACtBL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,mBAAgCO,EAAhC,oBAA8CR,EAA9C,mBADsB,EAGlBS,EAAU,SAAAD,GAAE,OAChBL,EAAAA,EAAAA,IAAA,UACKF,EADL,mBACwBO,EADxB,4BAC8CR,EAD9C,mBADgB,EAKZU,EAAa,SAACF,GAAD,IAAKF,EAAL,uDAAY,EAAZ,OACjBH,EAAAA,EAAAA,IAAA,UACKF,EADL,mBACwBO,EADxB,4BAC8CR,EAD9C,gCAC6EM,GAF5D,C,6ICnBbK,EAAcC,EAAAA,EAAAA,GAAH,2HAOXC,EAAcD,EAAAA,EAAAA,GAAH,oIAQXE,EAAaF,EAAAA,EAAAA,GAAH,6GAQVG,EAAUH,EAAAA,EAAAA,EAAH,iMAaPI,EAAQJ,EAAAA,EAAAA,GAAH,6F,SCgBX,EA1CgB,WACd,IAAQJ,GAAOS,EAAAA,EAAAA,MAAPT,GACR,GAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YACVZ,EAAAA,EAAAA,IAAWF,GACRgB,MAAK,SAAAC,GAEJ,OADAL,EAAWK,EAASC,KAAKC,SACrBF,EAASC,KAAKC,QACTL,EAAU,YAEVA,EAAU,YAEpB,IACAM,MAAMC,QAAQC,KACdC,SAAQ,WAAQ,GACpB,GAAE,CAACvB,IAEmB,IAAnBW,EAAQa,QAER,SAACrB,EAAD,UACGQ,EAAQc,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,UAACvB,EAAD,YACE,UAACC,EAAD,sBAAqBqB,MACrB,SAACpB,EAAD,UAAUqB,MAFMF,EADP,MAUJ,aAAXb,GACK,SAACL,EAAD,8CAGM,YAAXK,GACK,SAACL,EAAD,8BADT,CAGD,C","sources":["Api/Api.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'aba68af286dd64a295a5db6ef1289623';\nconst BASE_URL = `https://api.themoviedb.org/`;\n\nconst getTrendingMovies = () =>\n  axios.get(`${BASE_URL}3/trending/all/day?api_key=${API_KEY}`);\n\nconst getMoviesByName = (name, page = 1) =>\n  axios.get(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${name}`\n  );\n\nconst MovieInfoById = id =>\n  axios.get(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\nconst getCast = id =>\n  axios.get(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\nconst getReviews = (id, page = 1) =>\n  axios.get(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\nexport {\n  getTrendingMovies,\n  getMoviesByName,\n  MovieInfoById,\n  getCast,\n  getReviews,\n};\n","import styled from '@emotion/styled';\n\nconst ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  text-align: center;\n  gap: 20px;\n  margin-bottom: 50px;\n`;\nconst ReviewsItem = styled.li`\n  width: 420px;\n  height: 400px;\n  padding: 15px;\n\n  background-color: #212121;\n  border-radius: 5px;\n`;\nconst AuthorName = styled.h3`\n  margin-bottom: 20px;\n\n  font-size: 20px;\n  line-height: 1.7;\n  color: orange;\n`;\n\nconst Content = styled.p`\n  display: block;\n  height: 320px;\n  padding-right: 15px;\n\n  color: white;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1.7;\n\n  overflow-y: scroll;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 30px;\n\n  font-size: 24px;\n  text-align: center;\n`;\nexport { ReviewsItem, ReviewsList, AuthorName, Content, Title };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviews } from '../../Api/Api';\nimport {\n  AuthorName,\n  Content,\n  ReviewsItem,\n  ReviewsList,\n  Title,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('loading');\n    getReviews(id)\n      .then(response => {\n        setReviews(response.data.results);\n        if (response.data.results) {\n          return setStatus('notFound');\n        } else {\n          return setStatus('fulfilled');\n        }\n      })\n      .catch(console.log)\n      .finally(() => {});\n  }, [id]);\n\n  if (reviews.length !== 0) {\n    return (\n      <ReviewsList>\n        {reviews.map(({ author, content }, index) => (\n          <ReviewsItem key={index}>\n            <AuthorName>Author: {author}</AuthorName>\n            <Content>{content}</Content>\n          </ReviewsItem>\n        ))}\n      </ReviewsList>\n    );\n  }\n\n  if (status === 'notFound') {\n    return <Title>Sorry,no reviews for this movie</Title>;\n  }\n\n  if (status === 'loading') {\n    return <Title>Loading...</Title>;\n  }\n};\n\nexport default Reviews;\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","getMoviesByName","name","page","MovieInfoById","id","getCast","getReviews","ReviewsList","styled","ReviewsItem","AuthorName","Content","Title","useParams","useState","reviews","setReviews","status","setStatus","useEffect","then","response","data","results","catch","console","log","finally","length","map","index","author","content"],"sourceRoot":""}